<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
	<!-- 自动扫描dao和service包(自动注入) -->
	<!-- <context:component-scan base-package="com.cdeledu.dao" /> -->
	<context:component-scan base-package="com.cdeledu.service" />

	<!-- 加载service,此时要排除要controller,因为controller已经spring-servlet-context中加载过了 -->
	<context:component-scan base-package="com.cdeledu">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- 定义个缺省的控制适配器 -->
	<bean
		class="org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter" />

	<!-- ====================================================================== 
		加载资源文件 其中包含变量信息，必须在Spring配置文件的最前面加载，即第一个加载 -->
	<!-- 适用于多个资源文件加载 -->
	<bean id="config"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:properties/dbConfig.properties</value>
			</list>
		</property>
	</bean>
	<!-- ====================================================================== 
		数据库映射 指定连接数据库的基本属性信息 -->

	<bean name="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<!-- 指定连接数据库的驱动 -->
		<property name="driverClassName" value="${database.jdbcName}" />
		<!-- 指定连接数据库的URL 数据库名称,注意编码 -->
		<property name="url" value="${database.dbUrl}" />
		<!-- 指定连接数据库的用户名 -->
		<property name="username" value="${database.dbUserName}" />
		<!-- 指定连接数据库的密码 -->
		<property name="password" value="${database.dbPassword}" />
		<!-- 初始化连接大小 -->
		<property name="initialSize" value="0" />
		<!-- 连接池最大使用连接数量 -->
		<property name="maxActive" value="20" />
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="0" />
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="60000" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="25200000" />

		<!-- 打开removeAbandoned功能 -->
		<property name="removeAbandoned" value="true" />
		<!-- 1800秒，也就是30分钟 -->
		<property name="removeAbandonedTimeout" value="1800" />
		<!-- 关闭abanded连接时输出错误日志 -->
		<property name="logAbandoned" value="true" />

		<!-- 用来检测有效sql -->
		<property name="validationQuery" value="SELECT 1" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="testWhileIdle" value="true" />
		
		<!-- 开启Druid的监控统计功能,去掉后监控界面sql无法统计 -->
		<property name="filters" value="stat" />
	</bean>

	<!-- ====================================================================== 
		配置mybatis模板 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<!-- <property name="configLocation" value="classpath:systemConfig/mybatis-config.xml"/> -->
		<property name="mapperLocations" value="classpath:com/cdeledu/dao/impl/*.xml" />
	</bean>
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.cdeledu.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>
	
		<!-- ====================================================================== 
		JDBC 事务管理:在*ServiceImpl里写@Transactional就可以启用事物管理 -->
	<!-- 声明式事务管理器 -->
	<bean id="transactionManager" name="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 用注解来实现事务管理(配置事务规则) -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	
</beans>
