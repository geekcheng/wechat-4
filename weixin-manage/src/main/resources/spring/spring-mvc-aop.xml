<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
	<context:annotation-config />
	<!-- 激活自动代理功能 -->
	<aop:aspectj-autoproxy />
	<!-- 拦截器 -->
	<context:component-scan base-package="com.cdeledu.interceptors" />
	<!-- 数据库配置 -->
	<import resource="spring-dataSourceConfig.xml" />
	<!-- 缓存配置 -->
	<!-- <import resource="spring-cacheConfig.xml" /> -->

	<!-- ====================================================================== 
		JDBC 事务管理:在*ServiceImpl里写@Transactional就可以启用事物管理 -->
	<!-- 声明式事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 用注解来实现事务管理(配置事务规则) -->
	<tx:annotation-driven transaction-manager="transactionManager" />


	<!-- ====================================================================== 
		配置JDBC模板 -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<!-- 定时任务配置 -->
</beans>
