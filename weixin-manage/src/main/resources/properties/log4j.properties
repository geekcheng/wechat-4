# **************************************************************
# ----- log4j日志输入配置相关说明 -----
# **************************************************************

# %p 输出优先级，即DEBUG,INFO,WARN,ERROR,FATAL   
# %r 输出自应用启动到输出该log信息耗费的毫秒数   
# %c 输出所属的类目，通常就是所在类的全名   
# %t 输出产生该日志事件的线程名  
# %m 输出代码中指定的信息   
# %n 输出一个回车换行符，Windows平台为“\r\n”，Unix平台为“\n”   
# %d 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyyy MM dd HH:mm:ss,SSS}，输出类似： 2002年10月18日 22：10：28，921 
# %l 输出日志事件的发生位置，及在代码中的行数
# %F 输出代码中的文件名

#log4j提供4种布局:   
# org.apache.log4j.HTMLLayout（以HTML表格形式布局）  
# org.apache.log4j.PatternLayout（可以灵活地指定布局模式），  
# org.apache.log4j.SimpleLayout（包含日志信息的级别和信息字符串），  
# org.apache.log4j.TTCCLayout（包含日志产生的时间、线程、类别等等信息  

  
# log4j中有五级logger 输出级别:  
# FATAL 0   (致命错误信息)
# ERROR 3   (错误信息)
# WARN 4   (警告信息)
# INFO 6   (一般信息)
# DEBUG 7 (调试信息)

# **************************************************************
# ----- log4j日志输入配置 -----
# **************************************************************

### 设置日志级别 ###
# Log4j建议只使用四个级别,优先级从高到低分别是ERROR、WARN、INFO、DEBUG#
# 定义了INFO级别,则应用程序中所有DEBUG级别的日志信息将不被打印出来#
log4j.rootLogger=DEBUG,Console,logfile,db


################################################


### 输出到console端  ###


################################################
# 设置stdout的日志输出控制台 
log4j.appender.Console=org.apache.log4j.ConsoleAppender  
##输出日志到控制台的方式,默认为System.out 
# log4j.appender.Console.Target =System.out
log4j.appender.Console.layout=org.apache.log4j.PatternLayout
# 日志输出格式 ①
log4j.appender.Console.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n
#日志输出格式 ② 
# log4j.appender.Console.layout.ConversionPattern=%-d{yyyy-MM-dd HH:mm:ss} [%c]-[%p] %m%n
log4j.appender.Console.Encoding=UTF-8


########################################################################


### 日志输出(每天产生一个日志文件) ###

########################################################################
# 设置other的日志输出控制台 
log4j.appender.logfile = org.apache.log4j.DailyRollingFileAppender    
# 设置输出日志文件
log4j.appender.logfile.File = D://logs/log.log    
log4j.appender.logfile.Append = true    
# 日志输出级别  logfile
log4j.appender.logfile.Threshold = INFO     
log4j.appender.logfile.layout = org.apache.log4j.PatternLayout    
log4j.appender.logfile.layout.ConversionPattern = %-d{yyyy-MM-dd}  [ %t:%r ] - [ %p ]  %m%n   


########################################################################


###  定义sql语句的输出 ### 


########################################################################
log4j.logger.java.sql.Connection=DEBUG
log4j.logger.java.sql.ResultSet=DEBUG
log4j.logger.org.apache=DEBUG
log4j.logger.java.sql.Statement=DEBUG
log4j.logger.java.sql.PreparedStatement=DEBUG


########################################################################


###  定义Spring的输出 ###


######################################################################## 
log4j.logger.org.springframework=ERROR



########################################################################


### 将日志信息插入数据库 ###

########################################################################

#log4j.appender.db=org.apache.log4j.jdbc.JDBCAppender
# 设置缓存大小，就是当有10条日志信息是才忘数据库插一次
# log4j.appender.db.BufferSize=10
# 设置要使用的布局
# log4j.appender.db.layout=org.apache.log4j.PatternLayout
# 设置驱动程序类为指定的字符串,默认为sun.jdbc.odbc.JdbcOdbcDriver
# log4j.appender.db.driver=com.mysql.jdbc.Driver
# log4j.appender.db.URL=jdbc\:mysql\://localhost\:3306/db_wechat?useUnicode=true&amp;characterEncoding=UTF-8&amp;autoReconnect=true&amp;failOverReadOnly=false
# log4j.appender.db.user=root
# log4j.appender.db.password=
# 指定SQL语句在每次记录事件发生的时间执行SQL
# 内容％d（日期）%c: 日志信息所在地（类名）%p: 日志信息级别%m: 产生的日志具体信息 %n: 输出日志信息换行   
# log4j.appender.db.sql=insert into log_icecoldmonitor(level,category,thread,time,location,note) values('%p','%c','%t','%d{yyyy-MM-dd HH:mm:ss:SSS}','%l','%m')